package src;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

public class AddingHotelDetails {
	static ArrayList<HotelDetails> hotel = new ArrayList<HotelDetails>();

	public static void main(String args[]) throws ParseException {

		HotelDetails hotel1 = new HotelDetails("Lakewood", 110, 90, 80, 80, 3);
		HotelDetails hotel2 = new HotelDetails("Bridgewood", 160, 60, 110, 50, 4);
		HotelDetails hotel3 = new HotelDetails("Ridgewood", 220, 150, 100, 40, 5);
		hotel.add(hotel1);
		hotel.add(hotel2);
		hotel.add(hotel3);

		// AddingUC2
		findCheapestHotel();
		System.out.println(findCheapestHotel());

	}

	public static int getWeekdaysBetweenTwoDates(Date startdate, Date enddate) {
		Calendar startCal = Calendar.getInstance();
		startCal.setTime(startdate);

		Calendar endCal = Calendar.getInstance();
		endCal.setTime(enddate);

		int workDays = 0;

		// Return 0 if start and end are the same
		if (startCal.getTimeInMillis() == endCal.getTimeInMillis()) {
			return 0;
		}

		if (startCal.getTimeInMillis() > endCal.getTimeInMillis()) {
			startCal.setTime(enddate);
			endCal.setTime(startdate);
		}

		do { // excluding start date

			if (startCal.get(Calendar.DAY_OF_WEEK) != Calendar.SATURDAY
					&& startCal.get(Calendar.DAY_OF_WEEK) != Calendar.SUNDAY) {
				++workDays;
				startCal.add(Calendar.DAY_OF_MONTH, 1);
			}

		} while (startCal.getTimeInMillis() < endCal.getTimeInMillis()); // excluding end date
		return workDays;
	}

	private static int findCheapestHotel() {

		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the start date in format ddMMyyy");
		String startdate = sc.nextLine();
		System.out.println("Enter the end date in format ddMMyyy");
		String enddate = sc.nextLine();
		Date startsfrom = null, endson = null;
		long noDays = 0;

		SimpleDateFormat myFormat = new SimpleDateFormat("ddMMyyyy");
		try {
			startsfrom = myFormat.parse(startdate);
			endson = myFormat.parse(enddate);

			noDays = (endson.getTime() - startsfrom.getTime()) / (1000 * 60 * 60 * 24);
			System.out.println("No. of days: " + noDays);
		} catch (ParseException e) {
			e.printStackTrace();
		}

		int weekdays = getWeekdaysBetweenTwoDates(startsfrom, endson);
		int weekenddays = (int) noDays - weekdays;

		List<Integer> price = hotel.stream().map(h -> {
			return h.getRegular_weekday() * weekdays + h.getRegular_weekend() * weekenddays;
		}).collect(Collectors.toList());
		System.out.println("Cheapest Hotel for the given period is :" + weekdays);
		return weekdays;
	}
}
